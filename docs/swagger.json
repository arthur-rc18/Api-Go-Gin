{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/knights": {
            "post": {
                "description": "Route to create a new knight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "knights"
                ],
                "summary": "Create a new knight",
                "parameters": [
                    {
                        "description": "Knight model",
                        "name": "knight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Knight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/knights/:id": {
            "get": {
                "description": "Route to find a knight using the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "knights"
                ],
                "summary": "Search a knight by the ID",
                "parameters": [
                    {
                        "description": "Knight model",
                        "name": "knight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Knight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "models.Knight": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "characteristic": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Specifying the field's characteristics using validate",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "weapon": {
                    "type": "string"
                }
            }
        }
    }
}